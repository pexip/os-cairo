From: Heiko Lewin <heiko.lewin@worldiety.de>
Date: Tue, 15 Dec 2020 17:14:18 +0100
Subject: Minor cleanups

Origin: upstream, 1.17.3, commit:8bc14a6bba3bc8a64ff0749c74d9b96305bf6429
Bug: https://gitlab.freedesktop.org/cairo/cairo/-/issues/437
Bug-Debian: https://bugs.debian.org/978658
---
 test/bug-image-compositor.c | 33 ++++++++++++++++++++++++++++++---
 1 file changed, 30 insertions(+), 3 deletions(-)

diff --git a/test/bug-image-compositor.c b/test/bug-image-compositor.c
index fc4fd37..304ea08 100644
--- a/test/bug-image-compositor.c
+++ b/test/bug-image-compositor.c
@@ -1,5 +1,34 @@
+/*
+ * Copyright Â© 2020 Uli Schlachter, Heiko Lewin
+ *
+ * Permission is hereby granted, free of charge, to any person
+ * obtaining a copy of this software and associated documentation
+ * files (the "Software"), to deal in the Software without
+ * restriction, including without limitation the rights to use, copy,
+ * modify, merge, publish, distribute, sublicense, and/or sell copies
+ * of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
+ * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+ * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ *
+ * Author: Uli Schlachter <psychon@znc.in>
+ * Author: Heiko Lewin <hlewin@gmx.de>
+ */
 #include "cairo-test.h"
 
+
+/* This test reproduces an overflow of a mask-buffer in cairo-image-compositor.c */
+
 static cairo_test_status_t
 draw (cairo_t *cr, int width, int height)
 {
@@ -13,6 +42,7 @@ draw (cairo_t *cr, int width, int height)
     cairo_pattern_add_color_stop_rgb (p, 0, 0.99, 1, 1);
     cairo_pattern_add_color_stop_rgb (p, 1, 1, 1, 1);
     cairo_set_source (cr, p);
+    cairo_pattern_destroy(p);
 
     cairo_move_to (cr, 0.5, -1);
     for (int i = 0; i < width; i+=3) {
@@ -23,8 +53,6 @@ draw (cairo_t *cr, int width, int height)
     cairo_set_operator (cr, CAIRO_OPERATOR_SOURCE);
     cairo_stroke (cr);
 
-    cairo_pattern_destroy(p);
-
     return CAIRO_TEST_SUCCESS;
 }
 
@@ -36,4 +64,3 @@ CAIRO_TEST (bug_image_compositor,
 	    10000, 1,
 	    NULL, draw)
 	    
-	    
